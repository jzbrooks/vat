name: build

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [linux-x64, linux-arm64, windows-x64, windows-arm64, macos-arm64]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: zulu

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Check style
        run: ./gradlew ktlintCheck

      - name: Build unix binary
        if: ${{ contains(matrix.target, 'macos') || contains(matrix.target, 'linux') }}
        run: |
          VARIANT=$(echo ${{ matrix.target }} | sed -E 's/-x64/X64/; s/-arm64/Arm64/')
          ./gradlew "${VARIANT}Binary"

      - name: Archive vat-${{ matrix.target }}
        if: ${{ contains(matrix.target, 'macos') || contains(matrix.target, 'linux') }}
        uses: actions/upload-artifact@v4
        with:
          name: vat-${{ matrix.target }}
          path: build/libs/vat-${{ matrix.target }}

      - name: Build windows jar
        if: ${{ contains(matrix.target, 'windows') }}
        run: |
          VARIANT=$(echo ${{ matrix.target }} | sed -E 's/-x64/X64/; s/-arm64/Arm64/')
          ./gradlew ${VARIANT}Optimize

      - name: Archive vat-${{ matrix.target }}.jar
        if: ${{ contains(matrix.target, 'windows') }}
        uses: actions/upload-artifact@v4
        with:
          name: vat-${{ matrix.target }}.jar
          path: build/libs/vat-${{ matrix.target }}-*.jar

